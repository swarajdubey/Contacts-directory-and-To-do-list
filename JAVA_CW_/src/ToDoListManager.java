
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.Vector;
import javax.swing.DefaultListModel;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.SpinnerDateModel;
import javax.swing.WindowConstants;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author swaraj
 */
public class ToDoListManager extends javax.swing.JFrame {

    /**
     * Creates new form ToDoListManager
     */
    private String task_name;
    private String task_due_date,task_modify_due_date;
    private String task_due_time;
    private String task_priority_chosen="";
    private String username;
    private int int_task_priority_chosen=1;
    
    SQLiteDatabaseConnection sq2;
    
    private ArrayList<ArrayList<String>> prioritytasks=new ArrayList<ArrayList<String>>(); //must put this in the jList
    private ArrayList<ArrayList<String>> completed_tasks = new ArrayList<ArrayList<String>>();
    private ArrayList<ArrayList<String>> incomplete_tasks = new ArrayList<ArrayList<String>>();
    private ArrayList<String> overdue_tasks = new ArrayList<String>(); 
    
    DefaultTableModel mainTableModel;
    
    //----------------default timings for creating new task---------------
    private String defaultHour="12",defaultMinute="00",defaultMeredien="AM";
    private String meridien="AM";
    private String uniqueTask="";
    
    //---------------default timings for changing due time of task---------------
    private String changeDefaultHour="12",changeDefaultMinute="00",changeDefaultMeredien="AM";
    private String changemeridien="AM";
    
    
    private int change_task_priority=1;
    
    SQLiteDatabaseConnection sql;
    
    TaskDueTimeChange tdtc = new TaskDueTimeChange();
    TaskPriorityChange tpc = new TaskPriorityChange();
    TaskDueDateChange tddc = new TaskDueDateChange();
    DeleteTask dt = new DeleteTask();
    TaskStatusChange tsc = new TaskStatusChange();
    PriorityTasks pt = new PriorityTasks();
    InsertTask it = new InsertTask();
    TaskNameChange tnc = new TaskNameChange();
    DuplicateTaskCheck dtc = new DuplicateTaskCheck();
    CompletedTasks ct = new CompletedTasks();
    IncompleteTasks ict = new IncompleteTasks();
    
    public ToDoListManager() {
        initComponents();
        //set the date format to dd-MM-yyyy format
        jDateChooser1.setDateFormatString("dd-MM-yyyy"); 
        jDateChooser2.setDateFormatString("dd-MM-yyyy");
        
        String tableModelprioritycolumns[] = {"Task","Priority","Date","Time","Status"};
        
        mainTableModel = new DefaultTableModel(tableModelprioritycolumns, 0);
        jTable4.setModel(mainTableModel);
       
    }

    public void getClassObject(ToDoListManager t,String email, SQLiteDatabaseConnection sq)
    {
        t.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        username=email;
        sq2=sq;
        
        //update the tasks into the arraylists here
        updateTable();
       
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox3 = new javax.swing.JComboBox<>();
        jComboBox4 = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jComboBox5 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jButton6 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jLabel10 = new javax.swing.JLabel();
        jComboBox6 = new javax.swing.JComboBox<>();
        jComboBox7 = new javax.swing.JComboBox<>();
        jComboBox8 = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jButton7 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Add new task"));

        jLabel2.setText("Task name: ");

        jLabel3.setText("Due date:");

        jLabel5.setText("Due time:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "12", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Task_hour_ActionPerformed(evt);
            }
        });

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60" }));
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Task_minute_ActionPerformed(evt);
            }
        });

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AM", "PM" }));
        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Meridien_ActionPerformed(evt);
            }
        });

        jLabel6.setText("Priority:");

        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5" }));
        jComboBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Priority_ActionPerformed(evt);
            }
        });

        jButton1.setText("Submit New Task");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                New_task_ActionPerformed(evt);
            }
        });

        jLabel4.setText("(Default time: 12: 00 AM)");

        jLabel7.setText("(Default: 1)");

        jLabel11.setText("5- very important and 1- least important");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField1)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(22, 22, 22)
                                        .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(24, 24, 24)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                            .addComponent(jLabel11))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(9, 9, 9)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("View Tasks"));

        jButton3.setText("View by priority");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                View_by_priority_ActionPerformed(evt);
            }
        });

        jButton4.setText("View completed tasks");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                View_completed_tasks_ActionPerformed(evt);
            }
        });

        jButton5.setText("View incomplete tasks");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                View_incomplete_tasks_ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Edit tasks"));

        jButton6.setText("Change name of task");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Change_task_name_ActionPerformed(evt);
            }
        });

        jLabel8.setText("Modify date:");

        jLabel10.setText("Modify due time:");

        jComboBox6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "12", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11" }));
        jComboBox6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Modify_due_hour_ActionPerformed(evt);
            }
        });

        jComboBox7.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60" }));
        jComboBox7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Modify_due_minute_ActionPerformed(evt);
            }
        });

        jComboBox8.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AM", "PM" }));
        jComboBox8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Modify_due_meridien_ActionPerformed(evt);
            }
        });

        jLabel9.setText("Change priority:");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Change_priority_ComboBox_ActionPerformed(evt);
            }
        });

        jButton7.setText("Delete Task");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Delete_task_jButton7ActionPerformed(evt);
            }
        });

        jButton2.setText("Mark task as done");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Mark_task_as_done_ActionPerformed(evt);
            }
        });

        jRadioButton1.setText("Save Date");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Modify_date_ActionPerformed(evt);
            }
        });

        jRadioButton2.setText("Save priority");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Priority_change_ActionPerformed(evt);
            }
        });

        jRadioButton3.setText("Save time");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Save_time_ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButton2)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jRadioButton1))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jRadioButton3)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jButton6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jButton6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jDateChooser2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jRadioButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(jButton2))
        );

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable4MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTable4);

        jLabel1.setText("The following table shows your tasks (sorted according to priority by default)");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 575, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Control your tasks", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane3)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 608, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Priority_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Priority_ActionPerformed
        // TODO add your handling code here:
        task_priority_chosen = (String) jComboBox5.getSelectedItem();//this stores the priority
        int_task_priority_chosen=Integer.parseInt(task_priority_chosen); //default has already been set
    }//GEN-LAST:event_Priority_ActionPerformed

    private void Meridien_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Meridien_ActionPerformed
        // TODO add your handling code here:
        meridien = (String) jComboBox4.getSelectedItem(); //default has already been set
    }//GEN-LAST:event_Meridien_ActionPerformed

    private void Task_minute_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Task_minute_ActionPerformed
        // TODO add your handling code here:
        defaultMinute=(String) jComboBox3.getSelectedItem(); //default has already been set
    }//GEN-LAST:event_Task_minute_ActionPerformed

    private void Task_hour_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Task_hour_ActionPerformed
        // TODO add your handling code here:
        defaultHour=(String) jComboBox1.getSelectedItem(); //default has already been set
    }//GEN-LAST:event_Task_hour_ActionPerformed

    //make sure the data is selected first here!!!
    private void New_task_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_New_task_ActionPerformed
        // TODO add your handling code here:
        task_name=jTextField1.getText(); //gets the task name

        try{
            SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
            Date dt1=jDateChooser1.getDate(); //make sure dt1 is not null i.e a data has been chosen
            task_due_date=(String) sdf.format(dt1); //this stores the date in string format
        }catch(Exception e){
            JOptionPane pane = new JOptionPane();
            pane.setMessage("Please make sure you fill in the due date along with other information as well");
            JDialog d = pane.createDialog(null, "");
            d.setVisible(true);
            updateTable(); //to de select the row
            return;
        }
        if(task_name.length()==0 || task_due_date.length()==0) //this means these options have not been entered correctly
        {
            //notify the user that all information needs to be filled in
            JOptionPane pane = new JOptionPane();
            pane.setMessage("Please make sure you filled in task name and due time");
            JDialog d = pane.createDialog(null, "");
            d.setVisible(true);
            updateTable(); //to de select the row
            return; //keep exiting this function until the user fills up the parameters correctly
        }

        else
        {
            //reset variables to null
            jTextField1.setText("");
            jDateChooser1.setDate(null);

            
            task_due_time=defaultHour+":"+defaultMinute+" "+meridien; //time to be set
            //System.out.println("time is: "+task_due_time);
            //SQLiteDatabaseConnection sq = new SQLiteDatabaseConnection();
            
            //check for duplicate task 
            sql=dtc;
            sql.setparentObject(sq2);
            
            if(sql.checkForDuplicateTask(username,task_name)==true)
            {
                sql=it;
                sql.setparentObject(sq2);
                sql.insertUpdatesIntoDatabases(task_name,task_due_date,task_due_time,int_task_priority_chosen,username);
                task_due_date="";
                task_due_time="";
                task_priority_chosen="";
                task_name="";
                int_task_priority_chosen=1;

                //update the tasks into the arraylists here
                updateTable();


                //updates the tasks into th esqlite database here and reset the variables to null
                JOptionPane pane = new JOptionPane();
                pane.setMessage("Saved your task!");
                JDialog d = pane.createDialog(null, "");
                d.setVisible(true);

                return;
            }
            else
            {
                JOptionPane pane = new JOptionPane();
                pane.setMessage("The task: "+task_name+" already exists.");
                JDialog d = pane.createDialog(null, "");
                d.setVisible(true);
                updateTable(); //to de select the row
                return;
            }
            
            
        }
    }//GEN-LAST:event_New_task_ActionPerformed

    //updates the main table and shows tasks according to priority
    private void View_by_priority_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_View_by_priority_ActionPerformed
        // TODO add your handling code here:
        sql=pt;
        sql.setparentObject(sq2);
        
        prioritytasks=sql.getPrioritiesOfUserTasks(username);
        
        //update the priorities tables here
        mainTableModel.setRowCount(0);
        for(int i=0;i<prioritytasks.size();i++) //update the priority table
        {
            Vector v= new Vector();
            for(int j=0;j<prioritytasks.get(i).size();j++)
            {
                v.add(prioritytasks.get(i).get(j));
            }
            //tableModelpriority.addRow(v);
            mainTableModel.addRow(v);
        }
    }//GEN-LAST:event_View_by_priority_ActionPerformed

    //shows tasks that have been completed
    private void View_completed_tasks_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_View_completed_tasks_ActionPerformed
        // TODO add your handling code here:
        
        sql=ct;
        sql.setparentObject(sq2);
        completed_tasks=sql.getUserCompletedTasks(username);
        mainTableModel.setRowCount(0);
        for(int i=0;i<completed_tasks.size();i++) //update the priority table
        {
            Vector v= new Vector();
            for(int j=0;j<completed_tasks.get(i).size();j++)
            {
                v.add(completed_tasks.get(i).get(j));
            }
            mainTableModel.addRow(v);
        }
    }//GEN-LAST:event_View_completed_tasks_ActionPerformed

    //shows tasks that are incomplete
    private void View_incomplete_tasks_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_View_incomplete_tasks_ActionPerformed
        // TODO add your handling code here:
        sql=ict;
        sql.setparentObject(sq2);
        
        incomplete_tasks=sql.getUserInCompleteTasks(username);
        mainTableModel.setRowCount(0);
        for(int i=0;i<incomplete_tasks.size();i++) //update the priority table
        {
            Vector v= new Vector();
            for(int j=0;j<incomplete_tasks.get(i).size();j++)
            {
                v.add(incomplete_tasks.get(i).get(j));
            }
            mainTableModel.addRow(v);
        }
    }//GEN-LAST:event_View_incomplete_tasks_ActionPerformed

    private void jTable4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable4MouseClicked
        // TODO add your handling code here:
        int rowSelected=jTable4.getSelectedRow(); //get row of the selected table row
        uniqueTask=(String) (jTable4.getModel().getValueAt(rowSelected, 0)); //gets the task of the row selected
    }//GEN-LAST:event_jTable4MouseClicked

    //function that changes name of the task of the row that is selected
    private void Change_task_name_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Change_task_name_ActionPerformed
        // TODO add your handling code here:
        if(uniqueTask.length()>0)//rows has been selected
        {
            String response=JOptionPane.showInputDialog("Enter a new task name for the selected task: "+uniqueTask);
            if(response!=null && response.length()>0) //if a string has been entered and the button clicked is 'ok'
            {
                //change the task name right here y making call to the database
                
                //check for duplicate task name
                sql=dtc;
                sql.setparentObject(sq2);
                
                if(sql.checkForDuplicateTask(username, response)==true)
                {
                    sql=tnc;
                    sql.setparentObject(sq2);
                    
                    sql.changeTaskName(username,response,uniqueTask);
                    uniqueTask=""; //reset fields

                    updateTable(); //update the main table here

                    correctUser("Changed task name.");
                    return;
                }
                
                else
                {
                    correctUser("The task: "+response+" already exists.");
                    uniqueTask="";
                    updateTable(); //to de select the row
                    return;
                }
                
                
            }
            else
            {
                uniqueTask="";
                updateTable(); //refresh the table here
            }
        }
        else
        {
            //user must select a row first in order to make changes to the table
            correctUser("Please select a row before performing any operations."); //inform the user
            updateTable(); //to de select the row
            return;
        }
    }//GEN-LAST:event_Change_task_name_ActionPerformed

    //mark selected task as done
    private void Mark_task_as_done_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Mark_task_as_done_ActionPerformed
        // TODO add your handling code here:
        if(uniqueTask.length()>0)//this means row is selected
        {
            int reply = JOptionPane.showConfirmDialog(null, "Are you sure you want to mark task: "+uniqueTask+" as 'Done'?", "Confirm", JOptionPane.YES_NO_OPTION);
            if (reply == JOptionPane.YES_OPTION) //if user pressed the option 'yes'
            {
                //change this task status as done
                sql=tsc;
                sql.setparentObject(sq2);
                
                sql.changeTaskStatus(username, task_name, uniqueTask);
                uniqueTask="";
                updateTable(); //refresh the table here
                
                
                correctUser("Marked task "+uniqueTask+" as Done.");
                return;
            }
            else
            {
                uniqueTask="";
                updateTable(); //refresh the table here
            }
        }
        else
        {
            correctUser("Please select a row before performing any operations."); //inform the user
            updateTable(); //to de select the row
            uniqueTask="";
            return;
        }
    }//GEN-LAST:event_Mark_task_as_done_ActionPerformed

    //function to delete the task selected
    private void Delete_task_jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delete_task_jButton7ActionPerformed
        // TODO add your handling code here:
        if(uniqueTask.length()>0)
        {
            
            int reply = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete the task: "+uniqueTask+"?", "Confirm", JOptionPane.YES_NO_OPTION);
            if (reply == JOptionPane.YES_OPTION) //if user pressed the option 'yes'
            {
                sql = dt;
                sql.setparentObject(sq2);
                
                sql.deleteTask(username, uniqueTask);
            
                updateTable(); //update the table here

                correctUser("Deleted the task: "+uniqueTask);
                uniqueTask="";
                return;
            }
            else
            {
                uniqueTask="";
                updateTable(); //refresh the table here
            }
            
        }
        else
        {
            correctUser("Please select a row before performing any operations."); //inform the user
            updateTable(); //to de select the row
            uniqueTask="";
            return;
        }
    }//GEN-LAST:event_Delete_task_jButton7ActionPerformed

    private void Modify_date_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Modify_date_ActionPerformed
        // TODO add your handling code here:
        //jRadioButton1.setEnabled(false);
        if(uniqueTask.length()>0)
        {
            if(jRadioButton1.isEnabled())//if radio button has been clicked
            {
                try{
                    SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
                    Date dt2=jDateChooser2.getDate(); //make sure dt1 is not null i.e a data has been chosen
                    task_modify_due_date=(String) sdf.format(dt2); //this stores the date in string format
                }catch(Exception e){
                    JOptionPane pane = new JOptionPane();
                    pane.setMessage("Please make sure you fill in the date");
                    JDialog d = pane.createDialog(null, "");
                    d.setVisible(true);
                    //jRadioButton1.setEnabled(false);
                    if(jRadioButton1.isSelected())
                    {
                        jRadioButton1.setSelected(false);
                    }
                    updateTable(); //to de select the row
                    uniqueTask="";
                    return;
                }

                int reply = JOptionPane.showConfirmDialog(null, "Change the due date to: "+task_modify_due_date+"?", "Confirm", JOptionPane.YES_NO_OPTION);
                if (reply == JOptionPane.YES_OPTION) //if user pressed the option 'yes'
                {
                    sql=tddc;
                    sql.setparentObject(sq2);
                    sql.changeDueDate(username, task_modify_due_date,uniqueTask);
                    //save the new date here by calling the database
                    
                    updateTable();//update the table here
 
                    correctUser("Changed the due date of task: "+uniqueTask+" to: "+task_modify_due_date);
                    if(jRadioButton1.isSelected())
                    {
                        jRadioButton1.setSelected(false);
                    }
                    
                    //reset the variables
                    uniqueTask="";
                    task_modify_due_date="";
                    
                }
                else
                {
                    uniqueTask="";
                    updateTable(); //refresh the table here
                }
            }
        }
        else
        {
            
            correctUser("Please select a row before performing any operations."); //inform the user
            if(jRadioButton1.isSelected())
            {
                jRadioButton1.setSelected(false);
            }
            updateTable(); //to de select the row
            uniqueTask="";
            return;
        }
        
    }//GEN-LAST:event_Modify_date_ActionPerformed

    private void Priority_change_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Priority_change_ActionPerformed
        // TODO add your handling code here:
        if(uniqueTask.length()>0)
        {
            if(jRadioButton2.isEnabled())//if radio button has been clicked
            {
                int reply = JOptionPane.showConfirmDialog(null, "Change priority of task "+uniqueTask+" to "+change_task_priority+" ?", "Confirm", JOptionPane.YES_NO_OPTION);
                if (reply == JOptionPane.YES_OPTION) //if user pressed the option 'yes'
                {
                    //change priority here
                    
                    sql=tpc;
                    sql.setparentObject(sq2);
                    
                    sql.changePriority(username, change_task_priority, uniqueTask);
                    //update the table here

                    updateTable(); //update the table here
                   
                    //reset variables to null    
                    uniqueTask="";
                    change_task_priority=1;
                    if(jRadioButton2.isSelected())
                    {
                        jRadioButton2.setSelected(false);
                    }
                    correctUser("Priority changed");
                    return;
                }
                else
                {
                    if(jRadioButton2.isSelected())
                    {
                        jRadioButton2.setSelected(false);
                    }
                    uniqueTask="";
                    updateTable(); //refresh the table here
                }
                
            }
        }
        else
        {
            correctUser("Please select a row before performing any operations."); //inform the user
            if(jRadioButton2.isSelected())
            {
                jRadioButton2.setSelected(false);
            }
            updateTable(); //to de select the row
            uniqueTask="";
            return;
        }
    }//GEN-LAST:event_Priority_change_ActionPerformed

    private void Change_priority_ComboBox_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Change_priority_ComboBox_ActionPerformed
        // TODO add your handling code here:
        String string_change_task_priority =(String) jComboBox2.getSelectedItem();
        
        change_task_priority=Integer.parseInt(string_change_task_priority);
    }//GEN-LAST:event_Change_priority_ComboBox_ActionPerformed

    //function to save the new due time of the task 
    private void Save_time_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Save_time_ActionPerformed
        // TODO add your handling code here:
        if(uniqueTask.length()>0)
        {
            if(jRadioButton3.isEnabled())//if radio button has been clicked
            {
                String newTime=changeDefaultHour+":"+changeDefaultMinute+" "+changeDefaultMeredien;
                //prompt the user for confirmation
                int reply = JOptionPane.showConfirmDialog(null, "Change due date of task: "+uniqueTask+" to "+newTime+" ?", "Confirm", JOptionPane.YES_NO_OPTION);
                if (reply == JOptionPane.YES_OPTION) //if user pressed the option 'yes'
                {
                    //save changes to the database here
                    sql = tdtc;
                    sql.setparentObject(sq2);
                    
                    sql.changeDueTime(username, newTime, uniqueTask);
                    updateTable(); //update the table with the changes made
                    if(jRadioButton3.isSelected())
                    {
                        jRadioButton3.setSelected(false);
                    }
                    correctUser("Task due date changed.");
                    uniqueTask="";
                    return;
                    
                }
                else
                {
                    if(jRadioButton3.isSelected())
                    {
                        jRadioButton3.setSelected(false);
                    }
                    uniqueTask="";
                    updateTable(); //refresh the table here
                    return;
                }
            }
        }
        else
        {
            correctUser("Please select a row before performing any operations."); //inform the user
            if(jRadioButton3.isSelected())
            {
                jRadioButton3.setSelected(false);
            }
            updateTable(); //to de select the row
            uniqueTask="";
            return;
        }
    }//GEN-LAST:event_Save_time_ActionPerformed

    private void Modify_due_hour_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Modify_due_hour_ActionPerformed
        // TODO add your handling code here:
        changeDefaultHour=(String) jComboBox6.getSelectedItem();
    }//GEN-LAST:event_Modify_due_hour_ActionPerformed

    private void Modify_due_minute_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Modify_due_minute_ActionPerformed
        // TODO add your handling code here:
        changeDefaultMinute=(String) jComboBox7.getSelectedItem();
    }//GEN-LAST:event_Modify_due_minute_ActionPerformed

    private void Modify_due_meridien_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Modify_due_meridien_ActionPerformed
        // TODO add your handling code here:
        changeDefaultMeredien=(String) jComboBox8.getSelectedItem();
    }//GEN-LAST:event_Modify_due_meridien_ActionPerformed

    private void correctUser(String messageToDisplay)
    {
        JOptionPane pane = new JOptionPane();
        pane.setMessage(messageToDisplay); //message to be displayed in the JOptionPane
        JDialog d = pane.createDialog(null, "");
        d.setVisible(true);
        return;
    }
    
    private void updateTable()
    {
        sql=pt;
        sql.setparentObject(sq2);
        prioritytasks.clear();
        prioritytasks=sql.getPrioritiesOfUserTasks(username);

        //update the priorities tables here
        mainTableModel.setRowCount(0);
        for(int i=0;i<prioritytasks.size();i++) //update the priority table
        {
            Vector v= new Vector();
            for(int j=0;j<prioritytasks.get(i).size();j++)
            {
                v.add(prioritytasks.get(i).get(j));
            }
            //tableModelpriority.addRow(v);
            mainTableModel.addRow(v);
        }
        return;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ToDoListManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ToDoListManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ToDoListManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ToDoListManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                new ToDoListManager().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JComboBox<String> jComboBox5;
    private javax.swing.JComboBox<String> jComboBox6;
    private javax.swing.JComboBox<String> jComboBox7;
    private javax.swing.JComboBox<String> jComboBox8;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
